export {
  TRUCK_CONFIG,
  CAMERA_OFFSET,
  DEFAULT_GAMMA,
  DEFAULT_THETA,
  ANGLE_INCREMENT,
  DRAW_DEFAULT_MODE,
  FLOOR_HEIGHT,
  FLOOR_SQUARES_PER_SIDE,
  COLORS,
  DEFAULT_ZOOM,
  TRUCK_OFFSET,
  WHEEL_RADIUS,
  AXLE_ROTATION,
  DISTANCE_BETWEEN_AXLES,
  DEFAULT_TRANSLATION,
  AXLE_RADIUS,
  AXLE_LENGTH,
  DISTANCE_BETWEEN_WHEELS_SAME_AXLE,
  DEFAULT_ROTATION,
  WHEEL_THICKNESS,
  RIM_RADIUS,
  RIM_THICKNESS,
  TRANSLATION_INCREMENT,
  UNDER_BODY_OFFSET,
  UPPER_PLAQUE_WIDTH,
  UPPER_PLAQUE_HEIGHT,
  UPPER_PLAQUE_LENGTH,
  UPPER_PLAQUE_OFFSET,
  LOWER_PLAQUE_WIDTH,
  LOWER_PLAQUE_HEIGHT,
  LOWER_PLAQUE_LENGTH,
  MIDDLE_SIDE_BUMPER_WIDTH,
  SIDE_BUMPER_HEIGHT,
  SIDE_BUMPER_LENGTH,
  SIDE_BUMPER_OFFSET_Z,
  EDGE_SIDE_BUMPER_WIDTH,
  EDGE_SIDE_BUMPER_OFFSET_X,
  EDGE_BUMPER_WIDTH,
  EDGE_BUMPER_HEIGHT,
  EDGE_BUMPER_LENGTH,
  EDGE_BUMPER_OFFSET_X,
  FRONT_BLINKER_WIDTH,
  FRONT_BLINKER_HEIGHT,
  FRONT_BLINKER_LENGTH,
  FRONT_BLINKER_OFFSET_X,
  BLINKER_OFFSET_Y,
  FRONT_BLINKER_OFFSET_Z,
  BACK_BLINKER_WIDTH,
  BACK_BLINKER_HEIGHT,
  BACK_BLINKER_LENGTH,
  BACK_BLINKER_OFFSET_X,
  BACK_BLINKER_OFFSET_Z,
  FRONT_BODY_SETUP_OFFSET_Y,
  FRONT_BODY_SETUP_OFFSET_X,
  FRONT_BOX_WIDTH,
  FRONT_BOX_HEIGHT,
  FRONT_BOX_LENGTH,
  FRONT_WINDOW_HEIGHT,
  FRONT_WINDOW_WIDTH,
  FRONT_WINDOW_LENGTH,
  FRONT_WINDOW_OFFSET_X,
  FRONT_WINDOW_OFFSET_Y,
  GLASS_NODE_SIZE,
  FRONT_LIGHT_WIDTH,
  FRONT_LIGHT_HEIGHT,
  FRONT_LIGHT_LENGTH,
  FRONT_LIGHT_OFFSET_X,
  FRONT_LIGHT_OFFSET_Y,
  FRONT_LIGHT_OFFSET_Z,
  SIDE_WINDOW_WIDTH,
  SIDE_WINDOW_HEIGHT,
  SIDE_WINDOW_LENGTH,
  LEFT_WINDOW_OFFSET_X,
  RIGHT_WINDOW_OFFSET_X,
  LEFT_WINDOW_OFFSET_Y,
  LEFT_WINDOW_OFFSET_Z,
  RIGHT_WINDOW_OFFSET_Z,
  RIGHT_WINDOW_OFFSET_Y,
  SIREN_SIZE,
  SIREN_OFFSET_Y,
  SIREN_GLASS_RATIO,
  BACK_BODY_OFFSET_X,
  BACK_BODY_OFFSET_Y,
  BACK_BOX_WIDTH,
  BACK_BOX_HEIGHT,
  BACK_BOX_LENGTH,
  TOP_BOTTOM_WALLS_HEIGHT,
  RIGHT_LEFT_WALLS_WIDTH,
  TOTAL_CUBES,
  DEFAULT_ROLL_UP,
  IS_ROLLING_UP_DEFAULT,
  ROLL_UP_PROGRESS,
  AXE_BODY_WIDTH,
  AXE_BODY_HEIGHT,
  AXE_BODY_LENGTH,
  AXE_BODY_OFFSET_X,
  AXE_BODY_OFFSET_Y,
  AXE_BODY_OFFSET_Z,
  AXE_HEAD_WIDTH,
  AXE_HEAD_HEIGHT,
  AXE_HEAD_LENGTH,
  AXE_HEAD_OFFSET_X,
  AXE_HEAD_OFFSET_Y,
  AXE_HEAD_OFFSET_Z,
  AXE_BODY_ROTATION,
  AXE_HEAD_ROTATION,
  WATER_WIDTH,
  WATER_HEIGHT,
  WATER_LENGTH,
  WATER_GLASS_WIDTH,
  WATER_GLASS_HEIGHT,
  WATER_GLASS_LENGTH,
  WATER_TANK_OFFSET_X,
  WATER_TANK_OFFSET_Y,
  WATER_TANK_OFFSET_Z,
  BACK_TUBE_WIDTH,
  BACK_TUBE_HEIGHT,
  BACK_TUBE_LENGTH,
  BACK_TUBE_OFFSET_X,
  BACK_TUBE_OFFSET_Y,
  BACK_TUBE_OFFSET_Z,
  FRONT_TUBE_WIDTH,
  FRONT_TUBE_HEIGHT,
  FRONT_TUBE_LENGTH,
  FRONT_TUBE_OFFSET_X,
  FRONT_TUBE_OFFSET_Y,
  FRONT_TUBE_OFFSET_Z,
  UPPER_TUBE_WIDTH,
  UPPER_TUBE_HEIGHT,
  UPPER_TUBE_LENGTH,
  UPPER_TUBE_OFFSET_X,
  UPPER_TUBE_OFFSET_Y,
  UPPER_TUBE_OFFSET_Z,
  TAP_WHEEL_WIDTH,
  TAP_WHEEL_HEIGHT,
  TAP_WHEEL_LENGTH,
  TAP_WHEEL_OFFSET_X,
  TAP_WHEEL_OFFSET_Y,
  TAP_WHEEL_OFFSET_Z,
  TAP_WHEEL_VERTICAL_DETAIL_WIDTH,
  TAP_WHEEL_VERTICAL_DETAIL_HEIGHT,
  TAP_WHEEL_VERTICAL_DETAIL_LENGTH,
  TAP_WHEEL_HORIZONTAL_DETAIL_WIDTH,
  TAP_WHEEL_HORIZONTAL_DETAIL_HEIGHT,
  TAP_WHEEL_HORIZONTAL_DETAIL_LENGTH,
  LADDER_SETUP_OFFSET_X,
  LADDER_SETUP_OFFSET_Y,
  LADDER_BASE_WIDTH,
  LADDER_BASE_HEIGHT,
  BASE_BLOCK_WIDTH,
  BASE_BLOCK_HEIGHT,
  BASE_BLOCK_OFFSET_Y,
  LADDER_PART_WIDTH,
  LADDER_PART_HEIGHT,
  LADDER_PART_LENGTH,
  LADDER_PART_OFFSET_X,
  LADDER_PART_OFFSET_Y,
  LADDER_PART_OFFSET_Z,
  LADDER_STEP_WIDTH,
  LADDER_STEP_HEIGHT,
  LADDER_STEP_LENGTH,
  MAX_LADDER_STEPS,
  LADDER_STEP_SPACING,
  TOP_LADDER_OFFSET_X,
  TOP_LADDER_OFFSET_Y,
};

// Colors
const COLORS = {
  TRUCK_RED: [0.8, 0, 0, 1],
  RED: [1, 0, 0, 1],
  GREEN: [0, 1, 0, 1],
  LIGHT_BLUE: [0, 0.5, 1, 1],
  BLACK: [0, 0, 0, 1],
  WHITE: [1, 1, 1, 1],
  GREY: [0.5, 0.5, 0.5, 1],
  BROWN: [0.5, 0.25, 0, 1],
  SIREN: [0.4, 0.4, 0.4, 0.5],
  ORANGE: [1, 0.5, 0, 1],
};

// Constants for the movement
const DEFAULT_TRANSLATION = 0;
const DEFAULT_ROTATION = 0;
const TRANSLATION_INCREMENT = 0.2;

// Constants for the floor
const FLOOR_HEIGHT = 0.1;
const FLOOR_SQUARES_PER_SIDE = 15;

// Constants for the truck
const TRUCK_SIZE_MULTIPLIER = 1; // Makes truck bigger or smaller overall (1 is default)

// Factors to determine truck dimensions
const TRUCK_FACTORS = {
  WIDTH_FACTOR: 20,
  HEIGHT_FACTOR: 6,
  LENGTH_FACTOR: 8,
};

// Truck dimensions
const TRUCK_CONFIG = {
  WIDTH: TRUCK_SIZE_MULTIPLIER * TRUCK_FACTORS.WIDTH_FACTOR,
  HEIGHT: TRUCK_SIZE_MULTIPLIER * TRUCK_FACTORS.HEIGHT_FACTOR,
  LENGTH: TRUCK_SIZE_MULTIPLIER * TRUCK_FACTORS.LENGTH_FACTOR,
};

const WHEEL_RADIUS_FACTOR = 2; // (2 is default)
const WHEEL_RADIUS = TRUCK_SIZE_MULTIPLIER * WHEEL_RADIUS_FACTOR; // Radius of the wheels of the truck (with the multiplier)

const TRUCK_OFFSET = FLOOR_HEIGHT / 2 + WHEEL_RADIUS; // Offset of the truck from the center of the floor

const WHEEL_THICKNESS_FACTOR = 0.5;
const WHEEL_THICKNESS = WHEEL_RADIUS * WHEEL_THICKNESS_FACTOR;

// Constants for the Axles
const AXLE_ROTATION = 90;

const DISTANCE_BETWEEN_AXLES_FACTOR = 0.6;
const DISTANCE_BETWEEN_AXLES = Math.max(
  (TRUCK_CONFIG.WIDTH * DISTANCE_BETWEEN_AXLES_FACTOR) / 2,
  WHEEL_RADIUS
);

const AXLE_RADIUS_FACTOR = 0.1;
const AXLE_RADIUS = WHEEL_RADIUS * AXLE_RADIUS_FACTOR;

// Constants for the rims
const RIM_RADIUS_FACTOR = 1.2;
const RIM_RADIUS = WHEEL_RADIUS * RIM_RADIUS_FACTOR;

const RIM_THICKNESS_FACTOR = 0.1;
const RIM_THICKNESS = WHEEL_THICKNESS * RIM_THICKNESS_FACTOR;

const DISTANCE_BETWEEN_WHEELS_SAME_AXLE_FACTOR = 0.5;
const DISTANCE_BETWEEN_WHEELS_SAME_AXLE =
  TRUCK_CONFIG.LENGTH * DISTANCE_BETWEEN_WHEELS_SAME_AXLE_FACTOR;

const AXLE_LENGTH = DISTANCE_BETWEEN_WHEELS_SAME_AXLE * 2;

const ANGLE_INCREMENT = 5; // The theta/gamma increase/decrease by this amount when the user presses the arrow keys
const CAMERA_OFFSET = TRUCK_CONFIG.HEIGHT; // Camera offset based on the truck height
const DEFAULT_THETA = 45;
const DEFAULT_GAMMA = 30;
const DEFAULT_ZOOM = 10;

// Constants for the drawing
const DRAW_DEFAULT_MODE = WebGL2RenderingContext.TRIANGLES;

// Constant for the under body
const UNDER_BODY_OFFSET = 0.5 * WHEEL_RADIUS + AXLE_RADIUS;

// Constants for the lower plaque
const LOWER_PLAQUE_HEIGHT_FACTOR = 1.1;
const LOWER_PLAQUE_HEIGHT = LOWER_PLAQUE_HEIGHT_FACTOR * WHEEL_RADIUS;

const LOWER_PLAQUE_WIDTH_FACTOR = 1.0;
const LOWER_PLAQUE_WIDTH = TRUCK_CONFIG.WIDTH * LOWER_PLAQUE_WIDTH_FACTOR;

const LOWER_PLAQUE_LENGTH_FACTOR = 1.0;
const LOWER_PLAQUE_LENGTH = TRUCK_CONFIG.LENGTH * LOWER_PLAQUE_LENGTH_FACTOR;

// Constants for the upper plaque
const UPPER_PLAQUE_WIDTH_FACTOR = 1.1;
const UPPER_PLAQUE_WIDTH = UPPER_PLAQUE_WIDTH_FACTOR * TRUCK_CONFIG.WIDTH;

const UPPER_PLAQUE_HEIGHT_FACTOR = 0.1;
const UPPER_PLAQUE_HEIGHT = UPPER_PLAQUE_HEIGHT_FACTOR * TRUCK_CONFIG.HEIGHT;

const UPPER_PLAQUE_LENGTH_FACTOR = 1.1;
const UPPER_PLAQUE_LENGTH = UPPER_PLAQUE_LENGTH_FACTOR * TRUCK_CONFIG.LENGTH;

const UPPER_PLAQUE_OFFSET_FACTOR = 0.5;
const UPPER_PLAQUE_OFFSET =
  UPPER_PLAQUE_OFFSET_FACTOR * (LOWER_PLAQUE_HEIGHT + UPPER_PLAQUE_HEIGHT);

// Constants for the bumper
const MIDDLE_SIDE_BUMPER_WIDTH_FACTOR = 0.2;
const MIDDLE_SIDE_BUMPER_WIDTH =
  2 * DISTANCE_BETWEEN_AXLES -
  (2 + MIDDLE_SIDE_BUMPER_WIDTH_FACTOR) * WHEEL_RADIUS;

const SIDE_BUMPER_HEIGHT = LOWER_PLAQUE_HEIGHT;
const SIDE_BUMPER_LENGTH = (UPPER_PLAQUE_LENGTH - TRUCK_CONFIG.LENGTH) / 2;

const SIDE_BUMPER_OFFSET_Z_FACTOR = 0.5; // Not advisable to change this
const SIDE_BUMPER_OFFSET_Z =
  SIDE_BUMPER_OFFSET_Z_FACTOR * TRUCK_CONFIG.LENGTH +
  SIDE_BUMPER_OFFSET_Z_FACTOR * SIDE_BUMPER_LENGTH;

const EDGE_SIDE_BUMPER_WIDTH_FACTOR = 0.9;
const EDGE_SIDE_BUMPER_WIDTH = Math.max(
  EDGE_SIDE_BUMPER_WIDTH_FACTOR *
    (((1 - DISTANCE_BETWEEN_AXLES_FACTOR) * TRUCK_CONFIG.WIDTH) / 2) -
    WHEEL_RADIUS,
  0
);

const EDGE_SIDE_BUMPER_OFFSET_X_FACTOR = 0.5; // Not advisable to change this
const EDGE_SIDE_BUMPER_OFFSET_X =
  EDGE_SIDE_BUMPER_OFFSET_X_FACTOR * TRUCK_CONFIG.WIDTH -
  EDGE_SIDE_BUMPER_OFFSET_X_FACTOR * EDGE_SIDE_BUMPER_WIDTH;

const EDGE_BUMPER_WIDTH = (UPPER_PLAQUE_WIDTH - TRUCK_CONFIG.WIDTH) / 2;
const EDGE_BUMPER_HEIGHT = LOWER_PLAQUE_HEIGHT;
const EDGE_BUMPER_LENGTH =
  TRUCK_CONFIG.WIDTH < 4 * WHEEL_RADIUS
    ? TRUCK_CONFIG.LENGTH - WHEEL_THICKNESS / 2
    : UPPER_PLAQUE_LENGTH;

const EDGE_BUMPER_OFFSET_X_FACTOR = 0.5; // Not advisable to change this
const EDGE_BUMPER_OFFSET_X =
  EDGE_BUMPER_OFFSET_X_FACTOR * TRUCK_CONFIG.WIDTH +
  EDGE_BUMPER_OFFSET_X_FACTOR * EDGE_BUMPER_WIDTH;

// Constants for the blinkers
const FRONT_BLINKER_WIDTH_FACTOR = 0.05;
const FRONT_BLINKER_WIDTH = FRONT_BLINKER_WIDTH_FACTOR * UPPER_PLAQUE_WIDTH;

const FRONT_BLINKER_HEIGHT_FACTOR = 0.5;
const FRONT_BLINKER_HEIGHT = FRONT_BLINKER_HEIGHT_FACTOR * UPPER_PLAQUE_HEIGHT;

const FRONT_BLINKER_LENGTH_FACTOR = 0.01;
const FRONT_BLINKER_LENGTH = FRONT_BLINKER_LENGTH_FACTOR * TRUCK_CONFIG.LENGTH;

const FRONT_BLINKER_OFFSET_X_FACTOR = 0.5;
const FRONT_BLINKER_OFFSET_X =
  FRONT_BLINKER_OFFSET_X_FACTOR * TRUCK_CONFIG.WIDTH - FRONT_BLINKER_WIDTH;

const BLINKER_OFFSET_Y = 0;

const FRONT_BLINKER_OFFSET_Z_FACTOR = 0.5;
const FRONT_BLINKER_OFFSET_Z =
  FRONT_BLINKER_OFFSET_Z_FACTOR * UPPER_PLAQUE_LENGTH +
  FRONT_BLINKER_LENGTH / 2;

const BACK_BLINKER_WIDTH = FRONT_BLINKER_LENGTH;
const BACK_BLINKER_HEIGHT = FRONT_BLINKER_HEIGHT;
const BACK_BLINKER_LENGTH = FRONT_BLINKER_WIDTH;

const BACK_BLINKER_OFFSET_X_FACTOR = 0.5;
const BACK_BLINKER_OFFSET_X = BACK_BLINKER_OFFSET_X_FACTOR * UPPER_PLAQUE_WIDTH;

const BACK_BLINKER_OFFSET_Z_FACTOR = 0.3;
const BACK_BLINKER_OFFSET_Z =
  BACK_BLINKER_OFFSET_Z_FACTOR * UPPER_PLAQUE_LENGTH;

// Constants for the front body

const FRONT_BOX_WIDTH_FACTOR = 0.3;
const FRONT_BOX_WIDTH = FRONT_BOX_WIDTH_FACTOR * TRUCK_CONFIG.WIDTH;

const FRONT_BOX_HEIGHT_FACTOR = 1.0;
const FRONT_BOX_HEIGHT = FRONT_BOX_HEIGHT_FACTOR * TRUCK_CONFIG.HEIGHT;

const FRONT_BOX_LENGTH_FACTOR = 1.0;
const FRONT_BOX_LENGTH = FRONT_BOX_LENGTH_FACTOR * TRUCK_CONFIG.LENGTH;

const FRONT_BODY_SETUP_OFFSET_X_FACTOR = 0.5;
const FRONT_BODY_SETUP_OFFSET_X =
  -TRUCK_CONFIG.WIDTH / 2 + FRONT_BODY_SETUP_OFFSET_X_FACTOR * FRONT_BOX_WIDTH;

const SUM_FLOOR_UNDERBODY_AND_PLAQUES_FACTOR = 0.5;
const SUM_FLOOR_UNDERBODY_AND_PLAQUES =
  UNDER_BODY_OFFSET +
  SUM_FLOOR_UNDERBODY_AND_PLAQUES_FACTOR * LOWER_PLAQUE_HEIGHT +
  UPPER_PLAQUE_HEIGHT;

const FRONT_BODY_SETUP_OFFSET_Y_FACTOR = 0.5;
const FRONT_BODY_SETUP_OFFSET_Y =
  SUM_FLOOR_UNDERBODY_AND_PLAQUES +
  FRONT_BODY_SETUP_OFFSET_Y_FACTOR * FRONT_BOX_HEIGHT;

// Constants for the front window
const FRONT_WINDOW_HEIGHT_RATIO = 0.6;
const FRONT_WINDOW_HEIGHT = FRONT_WINDOW_HEIGHT_RATIO * FRONT_BOX_HEIGHT;

const FRONT_WINDOW_WIDTH_FACTOR = 0.9;
const FRONT_WINDOW_WIDTH = FRONT_WINDOW_WIDTH_FACTOR * FRONT_BOX_LENGTH;

const FRONT_WINDOW_LENGTH = 0.01;

const FRONT_WINDOW_OFFSET_X_FACTOR = -0.5;
const FRONT_WINDOW_OFFSET_X = FRONT_WINDOW_OFFSET_X_FACTOR * FRONT_BOX_WIDTH;

const FRONT_WINDOW_OFFSET_Y = 0.5;

// Constants for the lights
const GLASS_NODE_SIZE = 1.1;

const FRONT_LIGHT_WIDTH_FACTOR = 0.1;
const FRONT_LIGHT_WIDTH = FRONT_BOX_WIDTH * FRONT_LIGHT_WIDTH_FACTOR;

const FRONT_LIGHT_HEIGHT_FACTOR = 0.1;
const FRONT_LIGHT_HEIGHT = FRONT_BOX_HEIGHT * FRONT_LIGHT_HEIGHT_FACTOR;

const FRONT_LIGHT_LENGTH_FACTOR = 0.1;
const FRONT_LIGHT_LENGTH = FRONT_BOX_LENGTH * FRONT_LIGHT_LENGTH_FACTOR;

const FRONT_LIGHT_OFFSET_X_FACTOR = 0.5;
const FRONT_LIGHT_OFFSET_X = FRONT_LIGHT_OFFSET_X_FACTOR * FRONT_BOX_WIDTH;

const FRONT_LIGHT_OFFSET_Y_FACTOR = 2.5;
const FRONT_LIGHT_OFFSET_Y = FRONT_BOX_HEIGHT / FRONT_LIGHT_OFFSET_Y_FACTOR;

const FRONT_LIGHT_OFFSET_Z_FACTOR = 4;
const FRONT_LIGHT_OFFSET_Z = FRONT_BOX_LENGTH / FRONT_LIGHT_OFFSET_Z_FACTOR;

// Constants for the side windows
const SIDE_WINDOW_WIDTH_FACTOR = 0.3;
const SIDE_WINDOW_WIDTH = SIDE_WINDOW_WIDTH_FACTOR * FRONT_BOX_WIDTH;

const SIDE_WINDOW_HEIGHT_FACTOR = 0.6;
const SIDE_WINDOW_HEIGHT = SIDE_WINDOW_HEIGHT_FACTOR * FRONT_BOX_HEIGHT;

const SIDE_WINDOW_LENGTH_FACTOR = 0.01;
const SIDE_WINDOW_LENGTH = SIDE_WINDOW_LENGTH_FACTOR * FRONT_BOX_LENGTH;

const LEFT_WINDOW_OFFSET_X_FACTOR = 0.3;
const LEFT_WINDOW_OFFSET_X = LEFT_WINDOW_OFFSET_X_FACTOR * FRONT_BOX_WIDTH;

const RIGHT_WINDOW_OFFSET_X_FACTOR = 0.3;
const RIGHT_WINDOW_OFFSET_X = RIGHT_WINDOW_OFFSET_X_FACTOR * FRONT_BOX_WIDTH;

const LEFT_WINDOW_OFFSET_Y = 0.5;

const RIGHT_WINDOW_OFFSET_Y = 0.5;

const LEFT_WINDOW_OFFSET_Z_FACTOR = 0.5;
const LEFT_WINDOW_OFFSET_Z = LEFT_WINDOW_OFFSET_Z_FACTOR * FRONT_BOX_LENGTH;

const RIGHT_WINDOW_OFFSET_Z_FACTOR = 0.5;
const RIGHT_WINDOW_OFFSET_Z = RIGHT_WINDOW_OFFSET_Z_FACTOR * FRONT_BOX_LENGTH;

// Constants for the siren

const SIREN_SIZE_FACTOR = 0.1;
const SIREN_SIZE = SIREN_SIZE_FACTOR * TRUCK_CONFIG.HEIGHT;

const SIREN_OFFSET_Y_FACTOR = 0.5;
const SIREN_OFFSET_Y = FRONT_BOX_HEIGHT * SIREN_OFFSET_Y_FACTOR;

const SIREN_GLASS_RATIO = 1.1;

// Constants for the back body

const BACK_BOX_WIDTH_FACTOR = 0.65;
const BACK_BOX_WIDTH = TRUCK_CONFIG.WIDTH * BACK_BOX_WIDTH_FACTOR;

const BACK_BOX_HEIGHT_FACTOR = 0.8;
const BACK_BOX_HEIGHT = BACK_BOX_HEIGHT_FACTOR * TRUCK_CONFIG.HEIGHT;

const BACK_BOX_LENGTH_FACTOR = 1;
const BACK_BOX_LENGTH = TRUCK_CONFIG.LENGTH * BACK_BOX_LENGTH_FACTOR;

const TOP_BOTTOM_WALLS_HEIGHT_FACTOR = 0.1;
const TOP_BOTTOM_WALLS_HEIGHT =
  TOP_BOTTOM_WALLS_HEIGHT_FACTOR * BACK_BOX_HEIGHT;

const BACK_BODY_OFFSET_X_FACTOR = 0.5;
const BACK_BODY_OFFSET_X =
  (TRUCK_CONFIG.WIDTH - BACK_BOX_WIDTH) * BACK_BODY_OFFSET_X_FACTOR;

const BACK_BODY_OFFSET_Y_FACTOR = 0.5;
const BACK_BODY_OFFSET_Y =
  SUM_FLOOR_UNDERBODY_AND_PLAQUES +
  (BACK_BOX_HEIGHT + TOP_BOTTOM_WALLS_HEIGHT) * BACK_BODY_OFFSET_Y_FACTOR;

const RIGHT_LEFT_WALLS_WIDTH_FACTOR = 0.1;
const RIGHT_LEFT_WALLS_WIDTH = RIGHT_LEFT_WALLS_WIDTH_FACTOR * BACK_BOX_WIDTH;

const TOTAL_CUBES = 10;

const DEFAULT_ROLL_UP = 0;
const IS_ROLLING_UP_DEFAULT = false;

const ROLL_UP_PROGRESS = 0.5;

// Constants for the axe
const AXE_BODY_WIDTH_FACTOR = 0.05;
const AXE_BODY_WIDTH = AXE_BODY_WIDTH_FACTOR * BACK_BOX_HEIGHT;

const AXE_BODY_HEIGHT = AXE_BODY_WIDTH;

const AXE_BODY_LENGTH_FACTOR = 0.7;
const AXE_BODY_LENGTH = AXE_BODY_LENGTH_FACTOR * BACK_BOX_LENGTH;

const AXE_BODY_OFFSET_X_FACTOR = 0.5;
const AXE_BODY_OFFSET_X =
  AXE_BODY_OFFSET_X_FACTOR * BACK_BOX_WIDTH -
  RIGHT_LEFT_WALLS_WIDTH -
  AXE_BODY_OFFSET_X_FACTOR * AXE_BODY_WIDTH;

const AXE_BODY_OFFSET_Y = 0;
const AXE_BODY_OFFSET_Z = 0;

const AXE_HEAD_WIDTH_FACTOR = 0.1;
const AXE_HEAD_HEIGHT_FACTOR = 5;
const AXE_HEAD_LENGTH_FACTOR = 0.3;
const AXE_HEAD_OFFSET_Y_FACTOR = -0.5;
const AXE_HEAD_OFFSET_Z_FACTOR = -0.5;
const AXE_HEAD_OFFSET_Z_ADJUSTMENT = 0.5;

const AXE_HEAD_WIDTH = AXE_HEAD_WIDTH_FACTOR * AXE_BODY_WIDTH;
const AXE_HEAD_HEIGHT = AXE_HEAD_HEIGHT_FACTOR * AXE_BODY_HEIGHT;
const AXE_HEAD_LENGTH = AXE_HEAD_LENGTH_FACTOR * AXE_BODY_LENGTH;

const AXE_HEAD_OFFSET_X = AXE_BODY_OFFSET_X;
const AXE_HEAD_OFFSET_Y = AXE_HEAD_OFFSET_Y_FACTOR * AXE_HEAD_HEIGHT;
const AXE_HEAD_OFFSET_Z =
  AXE_HEAD_OFFSET_Z_FACTOR * AXE_BODY_LENGTH +
  AXE_HEAD_OFFSET_Z_ADJUSTMENT * AXE_HEAD_LENGTH;

const AXE_BODY_ROTATION = 90;
const AXE_HEAD_ROTATION = 180;

// Constants for the water tank

const WATER_WIDTH_FACTOR = 0.5;
const WATER_HEIGHT_FACTOR = 0.5;
const WATER_LENGTH_FACTOR = WATER_WIDTH_FACTOR;

const WATER_GLASS_SCALE_FACTOR = 1.1;

const WATER_TANK_OFFSET_X_FACTOR = 0.5;
const WATER_TANK_OFFSET_Y_FACTOR = 0.5;

const BACK_TUBE_SCALE_FACTOR = 0.1;

const BACK_TUBE_OFFSET_Y_FACTOR = 0.5;

const FRONT_TUBE_WIDTH_FACTOR = 0.9;
const FRONT_TUBE_HEIGHT_FACTOR = 0.5;

const FRONT_TUBE_OFFSET_X_FACTOR = 0.5;
const FRONT_TUBE_OFFSET_Y_FACTOR = 0.5;

const UPPER_TUBE_WIDTH_FACTOR = 0.3;
const UPPER_TUBE_HEIGHT_FACTOR = 0.5;
const UPPER_TUBE_LENGTH_FACTOR = 0.5;

const UPPER_TUBE_OFFSET_X_FACTOR = 0.5;
const UPPER_TUBE_OFFSET_Y_FACTOR = 0.5;

const TAP_WHEEL_OFFSET_X_FACTOR = 0.5;
const TAP_WHEEL_OFFSET_Y_FACTOR = 0.5;

const TAP_WHEEL_SCALE = 0.5;

const TAP_WHEEL_VERTICAL_DETAIL_SCALE_FACTOR = 0.5;
const TAP_WHEEL_VERTICAL_DETAIL_LENGTH_FACTOR = 2.5;

const TAP_WHEEL_HORIZONTAL_DETAIL_SCALE_FACTOR = 2.5;
const TAP_WHEEL_HORIZONTAL_DETAIL_LENGTH_FACTOR = 0.5;

const WATER_WIDTH = WATER_WIDTH_FACTOR * BACK_BOX_HEIGHT;
const WATER_HEIGHT = WATER_HEIGHT_FACTOR * BACK_BOX_WIDTH;
const WATER_LENGTH = WATER_LENGTH_FACTOR * BACK_BOX_HEIGHT;

const WATER_GLASS_WIDTH = WATER_GLASS_SCALE_FACTOR * WATER_WIDTH;
const WATER_GLASS_HEIGHT = WATER_GLASS_SCALE_FACTOR * WATER_HEIGHT;
const WATER_GLASS_LENGTH = WATER_GLASS_SCALE_FACTOR * WATER_LENGTH;

const WATER_TANK_OFFSET_X =
  -BACK_BOX_WIDTH / 2 +
  WATER_TANK_OFFSET_X_FACTOR * WATER_GLASS_HEIGHT +
  RIGHT_LEFT_WALLS_WIDTH;
const WATER_TANK_OFFSET_Y =
  -WATER_TANK_OFFSET_Y_FACTOR * WATER_GLASS_WIDTH + TOP_BOTTOM_WALLS_HEIGHT;
const WATER_TANK_OFFSET_Z = 0;

const BACK_TUBE_WIDTH = BACK_TUBE_SCALE_FACTOR * WATER_GLASS_WIDTH;
const BACK_TUBE_HEIGHT = BACK_TUBE_SCALE_FACTOR * WATER_GLASS_HEIGHT;
const BACK_TUBE_LENGTH = BACK_TUBE_WIDTH;

const BACK_TUBE_OFFSET_X = 0;
const BACK_TUBE_OFFSET_Y =
  -BACK_TUBE_OFFSET_Y_FACTOR * WATER_GLASS_HEIGHT -
  BACK_TUBE_OFFSET_Y_FACTOR * BACK_TUBE_HEIGHT;
const BACK_TUBE_OFFSET_Z = 0;

const FRONT_TUBE_WIDTH = FRONT_TUBE_WIDTH_FACTOR * BACK_TUBE_HEIGHT;
const FRONT_TUBE_HEIGHT = FRONT_TUBE_HEIGHT_FACTOR * BACK_TUBE_WIDTH;
const FRONT_TUBE_LENGTH = BACK_TUBE_LENGTH;

const FRONT_TUBE_OFFSET_X =
  -FRONT_TUBE_OFFSET_X_FACTOR * FRONT_TUBE_WIDTH + BACK_TUBE_WIDTH / 2;
const FRONT_TUBE_OFFSET_Y =
  -FRONT_TUBE_OFFSET_Y_FACTOR * WATER_GLASS_HEIGHT -
  FRONT_TUBE_OFFSET_Y_FACTOR * FRONT_TUBE_HEIGHT -
  BACK_TUBE_HEIGHT;
const FRONT_TUBE_OFFSET_Z = 0;

const UPPER_TUBE_WIDTH = UPPER_TUBE_WIDTH_FACTOR * FRONT_TUBE_WIDTH;
const UPPER_TUBE_HEIGHT = UPPER_TUBE_HEIGHT_FACTOR * FRONT_TUBE_HEIGHT;
const UPPER_TUBE_LENGTH = UPPER_TUBE_LENGTH_FACTOR * BACK_TUBE_LENGTH;

const UPPER_TUBE_OFFSET_X =
  UPPER_TUBE_OFFSET_X_FACTOR * BACK_TUBE_WIDTH + UPPER_TUBE_WIDTH / 2;
const UPPER_TUBE_OFFSET_Y =
  -UPPER_TUBE_OFFSET_Y_FACTOR * WATER_GLASS_HEIGHT -
  UPPER_TUBE_OFFSET_Y_FACTOR * FRONT_TUBE_HEIGHT -
  BACK_TUBE_HEIGHT;
const UPPER_TUBE_OFFSET_Z = 0;

const TAP_WHEEL_OFFSET_X =
  TAP_WHEEL_OFFSET_X_FACTOR * WATER_GLASS_HEIGHT +
  BACK_TUBE_HEIGHT +
  TAP_WHEEL_OFFSET_X_FACTOR * FRONT_TUBE_HEIGHT;
const TAP_WHEEL_OFFSET_Y =
  TAP_WHEEL_OFFSET_Y_FACTOR * BACK_TUBE_WIDTH + UPPER_TUBE_WIDTH;
const TAP_WHEEL_OFFSET_Z = 0;

const TAP_WHEEL_WIDTH = TAP_WHEEL_SCALE;
const TAP_WHEEL_HEIGHT = TAP_WHEEL_SCALE;
const TAP_WHEEL_LENGTH = TAP_WHEEL_SCALE;

const TAP_WHEEL_VERTICAL_DETAIL_WIDTH =
  TAP_WHEEL_VERTICAL_DETAIL_SCALE_FACTOR * TAP_WHEEL_WIDTH;
const TAP_WHEEL_VERTICAL_DETAIL_HEIGHT =
  TAP_WHEEL_VERTICAL_DETAIL_SCALE_FACTOR * TAP_WHEEL_HEIGHT;
const TAP_WHEEL_VERTICAL_DETAIL_LENGTH =
  TAP_WHEEL_VERTICAL_DETAIL_LENGTH_FACTOR * TAP_WHEEL_LENGTH;

const TAP_WHEEL_HORIZONTAL_DETAIL_WIDTH =
  TAP_WHEEL_HORIZONTAL_DETAIL_SCALE_FACTOR * TAP_WHEEL_WIDTH;
const TAP_WHEEL_HORIZONTAL_DETAIL_HEIGHT =
  TAP_WHEEL_HORIZONTAL_DETAIL_LENGTH_FACTOR * TAP_WHEEL_HEIGHT;
const TAP_WHEEL_HORIZONTAL_DETAIL_LENGTH =
  TAP_WHEEL_HORIZONTAL_DETAIL_LENGTH_FACTOR * TAP_WHEEL_LENGTH;

const LADDER_BASE_WIDTH_FACTOR = 0.5;
const LADDER_BASE_WIDTH =
  LADDER_BASE_WIDTH_FACTOR * Math.min(TRUCK_CONFIG.LENGTH, TRUCK_CONFIG.WIDTH);
const LADDER_BASE_HEIGHT_FACTOR = 0.1;
const LADDER_BASE_HEIGHT = LADDER_BASE_HEIGHT_FACTOR * TRUCK_CONFIG.HEIGHT;

const BASE_BLOCK_WIDTH_FACTOR = 0.6;
const BASE_BLOCK_WIDTH = BASE_BLOCK_WIDTH_FACTOR * LADDER_BASE_WIDTH;
const BASE_BLOCK_HEIGHT_FACTOR = 2;
const BASE_BLOCK_HEIGHT = BASE_BLOCK_HEIGHT_FACTOR * LADDER_BASE_HEIGHT;
const BASE_BLOCK_OFFSET_Y = 0.5 * (BASE_BLOCK_HEIGHT + LADDER_BASE_HEIGHT);

const LADDER_PART_WIDTH_FACTOR = 2;
const LADDER_PART_WIDTH = LADDER_PART_WIDTH_FACTOR * LADDER_BASE_WIDTH;
const LADDER_PART_HEIGHT_FACTOR = 0.5;
const LADDER_PART_HEIGHT = LADDER_PART_HEIGHT_FACTOR * LADDER_BASE_HEIGHT;
const LADDER_PART_LENGTH_FACTOR = 0.1;
const LADDER_PART_LENGTH = LADDER_PART_LENGTH_FACTOR * LADDER_BASE_WIDTH;
const LADDER_PART_OFFSET_X = -0.5 * LADDER_PART_WIDTH;
const LADDER_PART_OFFSET_Y =
  0.5 * LADDER_BASE_HEIGHT + 0.5 * LADDER_PART_HEIGHT + 0.5 * BASE_BLOCK_HEIGHT;
const LADDER_PART_OFFSET_Z = 0.5 * BASE_BLOCK_WIDTH + 0.5 * LADDER_PART_LENGTH;

const LADDER_STEP_WIDTH = BASE_BLOCK_WIDTH;
const LADDER_STEP_HEIGHT_FACTOR = 0.7;
const LADDER_STEP_HEIGHT = LADDER_STEP_HEIGHT_FACTOR * LADDER_PART_HEIGHT;
const LADDER_STEP_LENGTH_FACTOR = 0.1;
const LADDER_STEP_LENGTH = LADDER_STEP_LENGTH_FACTOR * LADDER_BASE_WIDTH;
const MAX_LADDER_STEPS = Math.floor(
  (LADDER_PART_WIDTH / LADDER_STEP_LENGTH - 2) / 2
);
const LADDER_STEP_SPACING = LADDER_PART_WIDTH / (MAX_LADDER_STEPS + 1);

const TOP_LADDER_OFFSET_X = LADDER_PART_WIDTH;
const TOP_LADDER_OFFSET_Y = LADDER_PART_HEIGHT;

const LADDER_SETUP_OFFSET_X = TRUCK_CONFIG.WIDTH / 2 - 0.6 * LADDER_BASE_WIDTH;
const LADDER_SETUP_OFFSET_Y =
  SUM_FLOOR_UNDERBODY_AND_PLAQUES +
  TOP_BOTTOM_WALLS_HEIGHT +
  BACK_BOX_HEIGHT +
  0.5 * LADDER_BASE_HEIGHT;
